---
title: "Reported UFO sightings"
format: 
  dashboard:
    orientation: columns
logo: images/ufo.png
theme: flatly
---

```{r}
# This dashboard requires Quarto version >= 1.4. 
# You can download the pre-release build here https://quarto.org/docs/download/prerelease

library(tidyverse)
library(sparklyr)
library(pysparklyr)
library(tidytext)
library(reticulate)
library(DT)

sc <- spark_connect(
    method = "databricks_connect"
)

ufo_tbl <-
  dplyr::tbl(sc, dbplyr::in_catalog("r_workshop", "nuforc", "nuforc_reports"))

ufo <- collect(ufo_tbl) 

ufo_words <-
  ufo |> 
  select(summary) |> 
  mutate(id = row_number()) |> 
  group_by(id) |> 
  unnest_tokens(output = word, input = summary) |> 
  ungroup() |> 
  anti_join(stop_words, by = join_by(word)) |>
  mutate(
    word = if_else(word %in% c("light", "lights"), "light/lights", word)
  ) |> 
  distinct(id, word) |> 
  count(word, sort = TRUE) |> 
  mutate(percent = n / nrow(ufo)) 

colors <-
  c("#f39c12", "#1ABC9C", "#2c3d50", "#BA1200", "#3498db")
```

## Column {width=65%}

### Row {.tabset}

```{r}
ufo_time <-
  ufo |> 
  drop_na(country, date_time) |> 
  mutate(
    month = month(date_time, label = TRUE),
    day = wday(date_time, label = TRUE),
    hour = hour(date_time),
    country = fct_lump(country, n = 3)
  ) 

ufo_time_plot <- function(time_period, label) {
  ufo_time |> 
    count(country, {{ time_period }}) |> 
    group_by(country) |> 
    mutate(percent = n / sum(n)) |> 
    ungroup() |> 
    ggplot(aes({{ time_period }}, percent, color = country, group = country)) +
    geom_line(linewidth = 1) +
    scale_y_continuous(labels = scales::label_percent()) +
    scale_color_manual(values = colors) +
    labs(
      x = label,
      y = "Percent of reported sightings",
      color = "Country",
      title = 
        glue::glue("Percent of reported sightings by {str_to_lower(label)}")
    ) +
    theme_minimal() +
    theme(legend.position = "bottom") 
}
```

```{r}
#| title: Month
ufo_time_plot(month, "Month")
```

```{r}
#| title: Day
ufo_time_plot(day, "Day of the week") 
```

```{r}
#| title: Hour
ufo_time_plot(hour, "Hour") +
  scale_x_continuous(breaks = scales::breaks_width(2))
```

### Row {height=29%}

```{r}
#| content: valuebox
#| title: "Sightings in 2022"
list(
  icon = "camera",
  color = "primary",
  value = ufo |> filter(year(date_time) == 2022) |> nrow()
)
```


```{r}
#| content: valuebox
#| title: "US sightings in 2022"
list(
  icon = "globe-americas",
  color = "secondary",
  value = ufo |> filter(year(date_time) == 2022, country == "USA") |> nrow()
)
```

```{r}
#| content: valuebox
#| title: "Most common shape"
list(
  icon = "lightning",
  color = "light",
  value = 
    ufo |> 
    count(shape) |> 
    slice_max(n, n = 1) |> 
    pull(shape)
)
```

## Column {width=60%}

### Row {.tabset}

```{r}
#| title: Plot
#| message: false

top_shapes <- 
  ufo |> 
  count(shape, sort = TRUE) |>
  filter(!shape %in% c("other", "unknown"), !is.na(shape)) |> 
  slice_max(order_by = n, n = 5) |> 
  pull(shape)

ufo_shapes <-
  ufo |> 
  drop_na(date_time) |> 
  count(year = year(date_time), shape) |> 
  group_by(year) |> 
  mutate(percent = round(n / sum(n) * 100, 2)) |> 
  ungroup() |> 
  filter(shape %in% top_shapes) |> 
  drop_na(shape) 

ufo_shapes |> 
  ggplot(aes(year, percent, color = shape |> str_to_title(), group = shape)) +
  geom_smooth(se = FALSE) +
  scale_y_continuous(labels = scales::label_percent(scale = 1)) +
  scale_color_manual(values = colors) +
  labs(
    x = "Year", 
    y = "Percent", 
    title = "UFO shapes reported by year", 
    subtitle = "For top 5 shapes",
    color = "Shape"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

```{r}
#| title: Data
ufo_shapes |> 
  rename_with(str_to_title) |> 
  rename(Count = N) |> 
  datatable()
```

### Row {height=40%}

```{r}
#| title: Most frequently used words to describe sighting
ufo_words |> 
  slice_max(order_by = n, n = 50) |> 
  mutate(percent = round(percent * 100, 2)) |> 
  rename(Word = word, Count = n, Percent = percent) |> 
  datatable(options = list(dom = "t"))
```



